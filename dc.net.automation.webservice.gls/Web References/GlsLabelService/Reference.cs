//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Il codice sorgente è stato generato automaticamente da Microsoft.VSDesigner, versione 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace dc.net.automation.webservice.gls.GlsLabelService {
    using System.Diagnostics;
    using System;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System.Web.Services;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="IlsWebServiceSoap", Namespace="https://labelservice.gls-italy.com/")]
    public partial class IlsWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AddParcelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseWorkDayOperationCompleted;
        
        private System.Threading.SendOrPostCallback CloseWorkDayByShipmentNumberOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpedOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpedAFMIOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSpedInternazionaleOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPdfOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPdfBySpedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetQuotationPDFOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZplOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetZplBySpedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSpedOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSpedByStatoOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSpedPeriodOperationCompleted;
        
        private System.Threading.SendOrPostCallback ListSpedPeriodByStatoOperationCompleted;
        
        private System.Threading.SendOrPostCallback RequestQuotationOperationCompleted;
        
        private System.Threading.SendOrPostCallback PickUpRequestOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePickUpOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReleaseShipmentStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback InvioFatturaExtraCEEOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public IlsWebService() {
            this.Url = global::dc.net.automation.webservice.gls.Properties.Settings.Default.dc_net_automation_webservice_gls_GlsLabelService_IlsWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AddParcelCompletedEventHandler AddParcelCompleted;
        
        /// <remarks/>
        public event CloseWorkDayCompletedEventHandler CloseWorkDayCompleted;
        
        /// <remarks/>
        public event CloseWorkDayByShipmentNumberCompletedEventHandler CloseWorkDayByShipmentNumberCompleted;
        
        /// <remarks/>
        public event DeleteSpedCompletedEventHandler DeleteSpedCompleted;
        
        /// <remarks/>
        public event DeleteSpedAFMICompletedEventHandler DeleteSpedAFMICompleted;
        
        /// <remarks/>
        public event DeleteSpedInternazionaleCompletedEventHandler DeleteSpedInternazionaleCompleted;
        
        /// <remarks/>
        public event GetPdfCompletedEventHandler GetPdfCompleted;
        
        /// <remarks/>
        public event GetPdfBySpedCompletedEventHandler GetPdfBySpedCompleted;
        
        /// <remarks/>
        public event GetQuotationCompletedEventHandler GetQuotationCompleted;
        
        /// <remarks/>
        public event GetQuotationPDFCompletedEventHandler GetQuotationPDFCompleted;
        
        /// <remarks/>
        public event GetZplCompletedEventHandler GetZplCompleted;
        
        /// <remarks/>
        public event GetZplBySpedCompletedEventHandler GetZplBySpedCompleted;
        
        /// <remarks/>
        public event ListSpedCompletedEventHandler ListSpedCompleted;
        
        /// <remarks/>
        public event ListSpedByStatoCompletedEventHandler ListSpedByStatoCompleted;
        
        /// <remarks/>
        public event ListSpedPeriodCompletedEventHandler ListSpedPeriodCompleted;
        
        /// <remarks/>
        public event ListSpedPeriodByStatoCompletedEventHandler ListSpedPeriodByStatoCompleted;
        
        /// <remarks/>
        public event RequestQuotationCompletedEventHandler RequestQuotationCompleted;
        
        /// <remarks/>
        public event PickUpRequestCompletedEventHandler PickUpRequestCompleted;
        
        /// <remarks/>
        public event DeletePickUpCompletedEventHandler DeletePickUpCompleted;
        
        /// <remarks/>
        public event ReleaseShipmentStockCompletedEventHandler ReleaseShipmentStockCompleted;
        
        /// <remarks/>
        public event InvioFatturaExtraCEECompletedEventHandler InvioFatturaExtraCEECompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/AddParcel", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode AddParcel(string XMLInfoParcel) {
            object[] results = this.Invoke("AddParcel", new object[] {
                        XMLInfoParcel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void AddParcelAsync(string XMLInfoParcel) {
            this.AddParcelAsync(XMLInfoParcel, null);
        }
        
        /// <remarks/>
        public void AddParcelAsync(string XMLInfoParcel, object userState) {
            if ((this.AddParcelOperationCompleted == null)) {
                this.AddParcelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddParcelOperationCompleted);
            }
            this.InvokeAsync("AddParcel", new object[] {
                        XMLInfoParcel}, this.AddParcelOperationCompleted, userState);
        }
        
        private void OnAddParcelOperationCompleted(object arg) {
            if ((this.AddParcelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddParcelCompleted(this, new AddParcelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/CloseWorkDay", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CloseWorkDay(string XMLCloseInfoParcel) {
            object[] results = this.Invoke("CloseWorkDay", new object[] {
                        XMLCloseInfoParcel});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CloseWorkDayAsync(string XMLCloseInfoParcel) {
            this.CloseWorkDayAsync(XMLCloseInfoParcel, null);
        }
        
        /// <remarks/>
        public void CloseWorkDayAsync(string XMLCloseInfoParcel, object userState) {
            if ((this.CloseWorkDayOperationCompleted == null)) {
                this.CloseWorkDayOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseWorkDayOperationCompleted);
            }
            this.InvokeAsync("CloseWorkDay", new object[] {
                        XMLCloseInfoParcel}, this.CloseWorkDayOperationCompleted, userState);
        }
        
        private void OnCloseWorkDayOperationCompleted(object arg) {
            if ((this.CloseWorkDayCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseWorkDayCompleted(this, new CloseWorkDayCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/CloseWorkDayByShipmentNumber", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode CloseWorkDayByShipmentNumber(string _xmlRequest) {
            object[] results = this.Invoke("CloseWorkDayByShipmentNumber", new object[] {
                        _xmlRequest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void CloseWorkDayByShipmentNumberAsync(string _xmlRequest) {
            this.CloseWorkDayByShipmentNumberAsync(_xmlRequest, null);
        }
        
        /// <remarks/>
        public void CloseWorkDayByShipmentNumberAsync(string _xmlRequest, object userState) {
            if ((this.CloseWorkDayByShipmentNumberOperationCompleted == null)) {
                this.CloseWorkDayByShipmentNumberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCloseWorkDayByShipmentNumberOperationCompleted);
            }
            this.InvokeAsync("CloseWorkDayByShipmentNumber", new object[] {
                        _xmlRequest}, this.CloseWorkDayByShipmentNumberOperationCompleted, userState);
        }
        
        private void OnCloseWorkDayByShipmentNumberOperationCompleted(object arg) {
            if ((this.CloseWorkDayByShipmentNumberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CloseWorkDayByShipmentNumberCompleted(this, new CloseWorkDayByShipmentNumberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/DeleteSped", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteSped(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string NumSpedizione) {
            object[] results = this.Invoke("DeleteSped", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        NumSpedizione});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpedAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string NumSpedizione) {
            this.DeleteSpedAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, NumSpedizione, null);
        }
        
        /// <remarks/>
        public void DeleteSpedAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string NumSpedizione, object userState) {
            if ((this.DeleteSpedOperationCompleted == null)) {
                this.DeleteSpedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpedOperationCompleted);
            }
            this.InvokeAsync("DeleteSped", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        NumSpedizione}, this.DeleteSpedOperationCompleted, userState);
        }
        
        private void OnDeleteSpedOperationCompleted(object arg) {
            if ((this.DeleteSpedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpedCompleted(this, new DeleteSpedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/DeleteSpedAFMI", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteSpedAFMI(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string SedeMittenteAFMI, string NumSpedizione) {
            object[] results = this.Invoke("DeleteSpedAFMI", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        SedeMittenteAFMI,
                        NumSpedizione});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpedAFMIAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string SedeMittenteAFMI, string NumSpedizione) {
            this.DeleteSpedAFMIAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, SedeMittenteAFMI, NumSpedizione, null);
        }
        
        /// <remarks/>
        public void DeleteSpedAFMIAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string SedeMittenteAFMI, string NumSpedizione, object userState) {
            if ((this.DeleteSpedAFMIOperationCompleted == null)) {
                this.DeleteSpedAFMIOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpedAFMIOperationCompleted);
            }
            this.InvokeAsync("DeleteSpedAFMI", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        SedeMittenteAFMI,
                        NumSpedizione}, this.DeleteSpedAFMIOperationCompleted, userState);
        }
        
        private void OnDeleteSpedAFMIOperationCompleted(object arg) {
            if ((this.DeleteSpedAFMICompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpedAFMICompleted(this, new DeleteSpedAFMICompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/DeleteSpedInternazionale", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeleteSpedInternazionale(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string BDA) {
            object[] results = this.Invoke("DeleteSpedInternazionale", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        BDA});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSpedInternazionaleAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string BDA) {
            this.DeleteSpedInternazionaleAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, BDA, null);
        }
        
        /// <remarks/>
        public void DeleteSpedInternazionaleAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string BDA, object userState) {
            if ((this.DeleteSpedInternazionaleOperationCompleted == null)) {
                this.DeleteSpedInternazionaleOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSpedInternazionaleOperationCompleted);
            }
            this.InvokeAsync("DeleteSpedInternazionale", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        BDA}, this.DeleteSpedInternazionaleOperationCompleted, userState);
        }
        
        private void OnDeleteSpedInternazionaleOperationCompleted(object arg) {
            if ((this.DeleteSpedInternazionaleCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSpedInternazionaleCompleted(this, new DeleteSpedInternazionaleCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/GetPdf", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPdf(string SedeGls, int CodiceCliente, string Password, int CodiceContratto, long ContatoreProgressivo) {
            object[] results = this.Invoke("GetPdf", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        ContatoreProgressivo});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPdfAsync(string SedeGls, int CodiceCliente, string Password, int CodiceContratto, long ContatoreProgressivo) {
            this.GetPdfAsync(SedeGls, CodiceCliente, Password, CodiceContratto, ContatoreProgressivo, null);
        }
        
        /// <remarks/>
        public void GetPdfAsync(string SedeGls, int CodiceCliente, string Password, int CodiceContratto, long ContatoreProgressivo, object userState) {
            if ((this.GetPdfOperationCompleted == null)) {
                this.GetPdfOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPdfOperationCompleted);
            }
            this.InvokeAsync("GetPdf", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        ContatoreProgressivo}, this.GetPdfOperationCompleted, userState);
        }
        
        private void OnGetPdfOperationCompleted(object arg) {
            if ((this.GetPdfCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPdfCompleted(this, new GetPdfCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/GetPdfBySped", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetPdfBySped(string SedeGls, string CodiceCliente, string Password, string CodiceContratto, string NumeroSpedizione, string Bda, string NumeroCollo, string TipoPorto) {
            object[] results = this.Invoke("GetPdfBySped", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        NumeroSpedizione,
                        Bda,
                        NumeroCollo,
                        TipoPorto});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetPdfBySpedAsync(string SedeGls, string CodiceCliente, string Password, string CodiceContratto, string NumeroSpedizione, string Bda, string NumeroCollo, string TipoPorto) {
            this.GetPdfBySpedAsync(SedeGls, CodiceCliente, Password, CodiceContratto, NumeroSpedizione, Bda, NumeroCollo, TipoPorto, null);
        }
        
        /// <remarks/>
        public void GetPdfBySpedAsync(string SedeGls, string CodiceCliente, string Password, string CodiceContratto, string NumeroSpedizione, string Bda, string NumeroCollo, string TipoPorto, object userState) {
            if ((this.GetPdfBySpedOperationCompleted == null)) {
                this.GetPdfBySpedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPdfBySpedOperationCompleted);
            }
            this.InvokeAsync("GetPdfBySped", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        NumeroSpedizione,
                        Bda,
                        NumeroCollo,
                        TipoPorto}, this.GetPdfBySpedOperationCompleted, userState);
        }
        
        private void OnGetPdfBySpedOperationCompleted(object arg) {
            if ((this.GetPdfBySpedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPdfBySpedCompleted(this, new GetPdfBySpedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/GetQuotation", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetQuotation(string XMLQuotationRequest) {
            object[] results = this.Invoke("GetQuotation", new object[] {
                        XMLQuotationRequest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationAsync(string XMLQuotationRequest) {
            this.GetQuotationAsync(XMLQuotationRequest, null);
        }
        
        /// <remarks/>
        public void GetQuotationAsync(string XMLQuotationRequest, object userState) {
            if ((this.GetQuotationOperationCompleted == null)) {
                this.GetQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationOperationCompleted);
            }
            this.InvokeAsync("GetQuotation", new object[] {
                        XMLQuotationRequest}, this.GetQuotationOperationCompleted, userState);
        }
        
        private void OnGetQuotationOperationCompleted(object arg) {
            if ((this.GetQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationCompleted(this, new GetQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/GetQuotationPDF", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetQuotationPDF(string XMLQuotationRequest) {
            object[] results = this.Invoke("GetQuotationPDF", new object[] {
                        XMLQuotationRequest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetQuotationPDFAsync(string XMLQuotationRequest) {
            this.GetQuotationPDFAsync(XMLQuotationRequest, null);
        }
        
        /// <remarks/>
        public void GetQuotationPDFAsync(string XMLQuotationRequest, object userState) {
            if ((this.GetQuotationPDFOperationCompleted == null)) {
                this.GetQuotationPDFOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetQuotationPDFOperationCompleted);
            }
            this.InvokeAsync("GetQuotationPDF", new object[] {
                        XMLQuotationRequest}, this.GetQuotationPDFOperationCompleted, userState);
        }
        
        private void OnGetQuotationPDFOperationCompleted(object arg) {
            if ((this.GetQuotationPDFCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetQuotationPDFCompleted(this, new GetQuotationPDFCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/GetZpl", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetZpl(string SedeGls, int CodiceCliente, string Password, int CodiceContratto, long ContatoreProgressivo) {
            object[] results = this.Invoke("GetZpl", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        ContatoreProgressivo});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetZplAsync(string SedeGls, int CodiceCliente, string Password, int CodiceContratto, long ContatoreProgressivo) {
            this.GetZplAsync(SedeGls, CodiceCliente, Password, CodiceContratto, ContatoreProgressivo, null);
        }
        
        /// <remarks/>
        public void GetZplAsync(string SedeGls, int CodiceCliente, string Password, int CodiceContratto, long ContatoreProgressivo, object userState) {
            if ((this.GetZplOperationCompleted == null)) {
                this.GetZplOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZplOperationCompleted);
            }
            this.InvokeAsync("GetZpl", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        ContatoreProgressivo}, this.GetZplOperationCompleted, userState);
        }
        
        private void OnGetZplOperationCompleted(object arg) {
            if ((this.GetZplCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZplCompleted(this, new GetZplCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/GetZplBySped", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode GetZplBySped(string SedeGls, string CodiceCliente, string Password, string CodiceContratto, string NumeroSpedizione, string Bda, string NumeroCollo, string TipoPorto) {
            object[] results = this.Invoke("GetZplBySped", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        NumeroSpedizione,
                        Bda,
                        NumeroCollo,
                        TipoPorto});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void GetZplBySpedAsync(string SedeGls, string CodiceCliente, string Password, string CodiceContratto, string NumeroSpedizione, string Bda, string NumeroCollo, string TipoPorto) {
            this.GetZplBySpedAsync(SedeGls, CodiceCliente, Password, CodiceContratto, NumeroSpedizione, Bda, NumeroCollo, TipoPorto, null);
        }
        
        /// <remarks/>
        public void GetZplBySpedAsync(string SedeGls, string CodiceCliente, string Password, string CodiceContratto, string NumeroSpedizione, string Bda, string NumeroCollo, string TipoPorto, object userState) {
            if ((this.GetZplBySpedOperationCompleted == null)) {
                this.GetZplBySpedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetZplBySpedOperationCompleted);
            }
            this.InvokeAsync("GetZplBySped", new object[] {
                        SedeGls,
                        CodiceCliente,
                        Password,
                        CodiceContratto,
                        NumeroSpedizione,
                        Bda,
                        NumeroCollo,
                        TipoPorto}, this.GetZplBySpedOperationCompleted, userState);
        }
        
        private void OnGetZplBySpedOperationCompleted(object arg) {
            if ((this.GetZplBySpedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetZplBySpedCompleted(this, new GetZplBySpedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/ListSped", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListSped(string SedeGls, string CodiceClienteGls, string PasswordClienteGls) {
            object[] results = this.Invoke("ListSped", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListSpedAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls) {
            this.ListSpedAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, null);
        }
        
        /// <remarks/>
        public void ListSpedAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, object userState) {
            if ((this.ListSpedOperationCompleted == null)) {
                this.ListSpedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSpedOperationCompleted);
            }
            this.InvokeAsync("ListSped", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls}, this.ListSpedOperationCompleted, userState);
        }
        
        private void OnListSpedOperationCompleted(object arg) {
            if ((this.ListSpedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSpedCompleted(this, new ListSpedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/ListSpedByStato", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListSpedByStato(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string Stato) {
            object[] results = this.Invoke("ListSpedByStato", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        Stato});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListSpedByStatoAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string Stato) {
            this.ListSpedByStatoAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, Stato, null);
        }
        
        /// <remarks/>
        public void ListSpedByStatoAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string Stato, object userState) {
            if ((this.ListSpedByStatoOperationCompleted == null)) {
                this.ListSpedByStatoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSpedByStatoOperationCompleted);
            }
            this.InvokeAsync("ListSpedByStato", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        Stato}, this.ListSpedByStatoOperationCompleted, userState);
        }
        
        private void OnListSpedByStatoOperationCompleted(object arg) {
            if ((this.ListSpedByStatoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSpedByStatoCompleted(this, new ListSpedByStatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/ListSpedPeriod", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListSpedPeriod(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string DataInizio, string DataFine) {
            object[] results = this.Invoke("ListSpedPeriod", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        DataInizio,
                        DataFine});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListSpedPeriodAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string DataInizio, string DataFine) {
            this.ListSpedPeriodAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, DataInizio, DataFine, null);
        }
        
        /// <remarks/>
        public void ListSpedPeriodAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string DataInizio, string DataFine, object userState) {
            if ((this.ListSpedPeriodOperationCompleted == null)) {
                this.ListSpedPeriodOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSpedPeriodOperationCompleted);
            }
            this.InvokeAsync("ListSpedPeriod", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        DataInizio,
                        DataFine}, this.ListSpedPeriodOperationCompleted, userState);
        }
        
        private void OnListSpedPeriodOperationCompleted(object arg) {
            if ((this.ListSpedPeriodCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSpedPeriodCompleted(this, new ListSpedPeriodCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/ListSpedPeriodByStato", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ListSpedPeriodByStato(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string DataInizio, string DataFine, string Stato) {
            object[] results = this.Invoke("ListSpedPeriodByStato", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        DataInizio,
                        DataFine,
                        Stato});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ListSpedPeriodByStatoAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string DataInizio, string DataFine, string Stato) {
            this.ListSpedPeriodByStatoAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, DataInizio, DataFine, Stato, null);
        }
        
        /// <remarks/>
        public void ListSpedPeriodByStatoAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string DataInizio, string DataFine, string Stato, object userState) {
            if ((this.ListSpedPeriodByStatoOperationCompleted == null)) {
                this.ListSpedPeriodByStatoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnListSpedPeriodByStatoOperationCompleted);
            }
            this.InvokeAsync("ListSpedPeriodByStato", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        DataInizio,
                        DataFine,
                        Stato}, this.ListSpedPeriodByStatoOperationCompleted, userState);
        }
        
        private void OnListSpedPeriodByStatoOperationCompleted(object arg) {
            if ((this.ListSpedPeriodByStatoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ListSpedPeriodByStatoCompleted(this, new ListSpedPeriodByStatoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/RequestQuotation", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode RequestQuotation(string XMLInfoQuotation) {
            object[] results = this.Invoke("RequestQuotation", new object[] {
                        XMLInfoQuotation});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void RequestQuotationAsync(string XMLInfoQuotation) {
            this.RequestQuotationAsync(XMLInfoQuotation, null);
        }
        
        /// <remarks/>
        public void RequestQuotationAsync(string XMLInfoQuotation, object userState) {
            if ((this.RequestQuotationOperationCompleted == null)) {
                this.RequestQuotationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRequestQuotationOperationCompleted);
            }
            this.InvokeAsync("RequestQuotation", new object[] {
                        XMLInfoQuotation}, this.RequestQuotationOperationCompleted, userState);
        }
        
        private void OnRequestQuotationOperationCompleted(object arg) {
            if ((this.RequestQuotationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RequestQuotationCompleted(this, new RequestQuotationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/PickUpRequest", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode PickUpRequest(string XMLInfoPickUpRequest) {
            object[] results = this.Invoke("PickUpRequest", new object[] {
                        XMLInfoPickUpRequest});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void PickUpRequestAsync(string XMLInfoPickUpRequest) {
            this.PickUpRequestAsync(XMLInfoPickUpRequest, null);
        }
        
        /// <remarks/>
        public void PickUpRequestAsync(string XMLInfoPickUpRequest, object userState) {
            if ((this.PickUpRequestOperationCompleted == null)) {
                this.PickUpRequestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPickUpRequestOperationCompleted);
            }
            this.InvokeAsync("PickUpRequest", new object[] {
                        XMLInfoPickUpRequest}, this.PickUpRequestOperationCompleted, userState);
        }
        
        private void OnPickUpRequestOperationCompleted(object arg) {
            if ((this.PickUpRequestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PickUpRequestCompleted(this, new PickUpRequestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/DeletePickUp", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode DeletePickUp(string XMLInfoDeletePickUp) {
            object[] results = this.Invoke("DeletePickUp", new object[] {
                        XMLInfoDeletePickUp});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void DeletePickUpAsync(string XMLInfoDeletePickUp) {
            this.DeletePickUpAsync(XMLInfoDeletePickUp, null);
        }
        
        /// <remarks/>
        public void DeletePickUpAsync(string XMLInfoDeletePickUp, object userState) {
            if ((this.DeletePickUpOperationCompleted == null)) {
                this.DeletePickUpOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePickUpOperationCompleted);
            }
            this.InvokeAsync("DeletePickUp", new object[] {
                        XMLInfoDeletePickUp}, this.DeletePickUpOperationCompleted, userState);
        }
        
        private void OnDeletePickUpOperationCompleted(object arg) {
            if ((this.DeletePickUpCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePickUpCompleted(this, new DeletePickUpCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/ReleaseShipmentStock", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode ReleaseShipmentStock(string XMLInfoReleaseShipmentStock) {
            object[] results = this.Invoke("ReleaseShipmentStock", new object[] {
                        XMLInfoReleaseShipmentStock});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void ReleaseShipmentStockAsync(string XMLInfoReleaseShipmentStock) {
            this.ReleaseShipmentStockAsync(XMLInfoReleaseShipmentStock, null);
        }
        
        /// <remarks/>
        public void ReleaseShipmentStockAsync(string XMLInfoReleaseShipmentStock, object userState) {
            if ((this.ReleaseShipmentStockOperationCompleted == null)) {
                this.ReleaseShipmentStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReleaseShipmentStockOperationCompleted);
            }
            this.InvokeAsync("ReleaseShipmentStock", new object[] {
                        XMLInfoReleaseShipmentStock}, this.ReleaseShipmentStockOperationCompleted, userState);
        }
        
        private void OnReleaseShipmentStockOperationCompleted(object arg) {
            if ((this.ReleaseShipmentStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReleaseShipmentStockCompleted(this, new ReleaseShipmentStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("https://labelservice.gls-italy.com/InvioFatturaExtraCEE", RequestNamespace="https://labelservice.gls-italy.com/", ResponseNamespace="https://labelservice.gls-italy.com/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Xml.XmlNode InvioFatturaExtraCEE(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string NumeroFattura, string DataFattura, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] FilePdf) {
            object[] results = this.Invoke("InvioFatturaExtraCEE", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        NumeroFattura,
                        DataFattura,
                        FilePdf});
            return ((System.Xml.XmlNode)(results[0]));
        }
        
        /// <remarks/>
        public void InvioFatturaExtraCEEAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string NumeroFattura, string DataFattura, byte[] FilePdf) {
            this.InvioFatturaExtraCEEAsync(SedeGls, CodiceClienteGls, PasswordClienteGls, NumeroFattura, DataFattura, FilePdf, null);
        }
        
        /// <remarks/>
        public void InvioFatturaExtraCEEAsync(string SedeGls, string CodiceClienteGls, string PasswordClienteGls, string NumeroFattura, string DataFattura, byte[] FilePdf, object userState) {
            if ((this.InvioFatturaExtraCEEOperationCompleted == null)) {
                this.InvioFatturaExtraCEEOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInvioFatturaExtraCEEOperationCompleted);
            }
            this.InvokeAsync("InvioFatturaExtraCEE", new object[] {
                        SedeGls,
                        CodiceClienteGls,
                        PasswordClienteGls,
                        NumeroFattura,
                        DataFattura,
                        FilePdf}, this.InvioFatturaExtraCEEOperationCompleted, userState);
        }
        
        private void OnInvioFatturaExtraCEEOperationCompleted(object arg) {
            if ((this.InvioFatturaExtraCEECompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InvioFatturaExtraCEECompleted(this, new InvioFatturaExtraCEECompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void AddParcelCompletedEventHandler(object sender, AddParcelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddParcelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddParcelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseWorkDayCompletedEventHandler(object sender, CloseWorkDayCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseWorkDayCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseWorkDayCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void CloseWorkDayByShipmentNumberCompletedEventHandler(object sender, CloseWorkDayByShipmentNumberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CloseWorkDayByShipmentNumberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CloseWorkDayByShipmentNumberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSpedCompletedEventHandler(object sender, DeleteSpedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSpedAFMICompletedEventHandler(object sender, DeleteSpedAFMICompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpedAFMICompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpedAFMICompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeleteSpedInternazionaleCompletedEventHandler(object sender, DeleteSpedInternazionaleCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSpedInternazionaleCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSpedInternazionaleCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPdfCompletedEventHandler(object sender, GetPdfCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPdfCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPdfCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetPdfBySpedCompletedEventHandler(object sender, GetPdfBySpedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPdfBySpedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPdfBySpedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationCompletedEventHandler(object sender, GetQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetQuotationPDFCompletedEventHandler(object sender, GetQuotationPDFCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetQuotationPDFCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetQuotationPDFCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetZplCompletedEventHandler(object sender, GetZplCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZplCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZplCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void GetZplBySpedCompletedEventHandler(object sender, GetZplBySpedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetZplBySpedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetZplBySpedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListSpedCompletedEventHandler(object sender, ListSpedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSpedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSpedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListSpedByStatoCompletedEventHandler(object sender, ListSpedByStatoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSpedByStatoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSpedByStatoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListSpedPeriodCompletedEventHandler(object sender, ListSpedPeriodCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSpedPeriodCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSpedPeriodCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ListSpedPeriodByStatoCompletedEventHandler(object sender, ListSpedPeriodByStatoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ListSpedPeriodByStatoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ListSpedPeriodByStatoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void RequestQuotationCompletedEventHandler(object sender, RequestQuotationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RequestQuotationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RequestQuotationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void PickUpRequestCompletedEventHandler(object sender, PickUpRequestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PickUpRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PickUpRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void DeletePickUpCompletedEventHandler(object sender, DeletePickUpCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeletePickUpCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeletePickUpCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void ReleaseShipmentStockCompletedEventHandler(object sender, ReleaseShipmentStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReleaseShipmentStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReleaseShipmentStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    public delegate void InvioFatturaExtraCEECompletedEventHandler(object sender, InvioFatturaExtraCEECompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.9032.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InvioFatturaExtraCEECompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InvioFatturaExtraCEECompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Xml.XmlNode Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591